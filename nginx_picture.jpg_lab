---
- name: Configure Nginx Docker container
  hosts: docker01
  become: yes
  vars:
    nginx_container_name: nginx_test
    nginx_image: nginx:latest
    nginx_config_path: /etc/nginx/conf.d/default.conf
    picture_local_path: /path/to/local/picture.jpg
    picture_remote_path: /var/pic/picture.jpg
    nginx_data_dir: /var/lib/nginx

  tasks:
    - name: Ensure Docker is installed
      package:
        name: docker-ce
        state: present

    - name: Ensure Docker is running
      service:
        name: docker
        state: started
        enabled: yes

    - name: Create directory for picture
      file:
        path: "{{ nginx_data_dir }}"
        state: directory
        mode: '0755'

    - name: Copy picture to test machine
      copy:
        src: "{{ picture_local_path }}"
        dest: "{{ picture_remote_path }}"
        mode: '0644'

    - name: Create Nginx configuration file
      copy:
        dest: "{{ nginx_config_path }}"
        content: |
          server {
              listen 80;
              location / {
                  alias /usr/share/nginx/html;
                  autoindex on;
              }
              location /picture.jpg {
                  alias /var/pic/picture.jpg;
              }
          }
        mode: '0644'

    - name: Remove existing nginx container if exists
      docker_container:
        name: "{{ nginx_container_name }}"
        state: absent
        force_kill: yes

    - name: Run Nginx container
      docker_container:
        name: "{{ nginx_container_name }}"
        image: "{{ nginx_image }}"
        state: started
        restart_policy: always
        published_ports:
          - "80:80"
        volumes:
          - "{{ nginx_data_dir }}:/var/pic"
          - "{{ nginx_config_path }}:/etc/nginx/conf.d/default.conf"
        volumes:
          - /usr/share/nginx/html:/usr/share/nginx/html

    - name: Verify Nginx is serving the picture
      uri:
        url: http://localhost/picture.jpg
        method: GET
        return_content: yes
      register: result

    - name: Fail if picture is not served
      fail:
        msg: "The picture was not served correctly by Nginx."
      when: "'picture.jpg' not in result.content"
